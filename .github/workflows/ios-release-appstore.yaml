name: Deploy the iOS app
on:
  # Enable manual run
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: 'Fastlane lane to use'
        required: true
        options:
        - ciappcenter
        - citestflight
        default: 'ciappcenter'

  push:
    tags:
    - '*'

jobs:
  fastlane-deploy:
    runs-on: macOS-latest
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.3'
          channel: master
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter

      # Checkout code and get packages.
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
          working-directory: ios

      - name: Cache dependencies
        id: cache-signing-key
        uses: actions/cache@v3
        with:
          path: |
            ~/mobile-signing-key-vault
          key: ${{ runner.os }}-mobile-signing-key-vault

      # Checkout signing key in another repo.
      - name: Checkout signing key file
        if: steps.cache-signing-key.outputs.cache-hit != 'true'
        env: 
          KEY_VAULT_DEPLOYMENT_KEY: ${{ secrets.KEY_VAULT_DEPLOYMENT_KEY }}
        run: |
          mkdir ci
          echo $KEY_VAULT_DEPLOYMENT_KEY >> ci/ci
          GIT_SSH_COMMAND='ssh -i ci/ci -o IdentitiesOnly=yes' git clone git@github.com:bitmark-inc/mobile-signing-key-vault.git --depth 1
          rm -rf ci/ci

      - run: flutter pub get

      # Build and deploy with Fastlane (by default, to beta track) ðŸš€.
      - run: bundle exec fastlane ${{ github.event.inputs.lane || 'ciappcenter' }}
        env:
          APP_VERSION: ${{ secrets.APP_VERSION }}
          ENTERPRISE_CERTIFICATE_PASSWORD: ${{ secrets.ENTERPRISE_CERTIFICATE_PASSWORD }}
          APPSTORE_CERTIFICATE_PASSWORD: ${{ secrets.APPSTORE_CERTIFICATE_PASSWORD }}
          SENTRY_AUTH: ${{ secrets.SENTRY_AUTH }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
        working-directory: ios